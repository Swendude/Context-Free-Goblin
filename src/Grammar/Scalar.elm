-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Grammar.Scalar exposing (Codecs, Id(..), Jsonb(..), Uuid(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Id
    = Id String


type Jsonb
    = Jsonb String


type Uuid
    = Uuid String


defineCodecs :
    { codecId : Codec valueId
    , codecJsonb : Codec valueJsonb
    , codecUuid : Codec valueUuid
    }
    -> Codecs valueId valueJsonb valueUuid
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueId valueJsonb valueUuid
    ->
        { codecId : Codec valueId
        , codecJsonb : Codec valueJsonb
        , codecUuid : Codec valueUuid
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueId valueJsonb valueUuid
    = Codecs (RawCodecs valueId valueJsonb valueUuid)


type alias RawCodecs valueId valueJsonb valueUuid =
    { codecId : Codec valueId
    , codecJsonb : Codec valueJsonb
    , codecUuid : Codec valueUuid
    }


defaultCodecs : RawCodecs Id Jsonb Uuid
defaultCodecs =
    { codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecJsonb =
        { encoder = \(Jsonb raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Jsonb
        }
    , codecUuid =
        { encoder = \(Uuid raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Uuid
        }
    }
